(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{232:function(t,s,a){"use strict";a.r(s);var e=a(3),r=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"正则表达式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#正则表达式"}},[t._v("#")]),t._v(" 正则表达式")]),t._v(" "),s("p",[t._v("正则表达式是一种文本匹配的模式")]),t._v(" "),s("h2",{attrs:{id:"_1-regexp-对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-regexp-对象"}},[t._v("#")]),t._v(" 1. RegExp 对象")]),t._v(" "),s("p",[t._v("在 JavaScript 中，有两种创建正则表达式的方式，它们分别是")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" regexp "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RegExp")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'xyz'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" regexp "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("xyz")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h3",{attrs:{id:"_1-1-实例属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-实例属性"}},[t._v("#")]),t._v(" 1.1 实例属性")]),t._v(" "),s("ul",[s("li",[s("p",[s("code",[t._v("RegExp.prototype.ignoreCase")]),t._v("：只读，返回布尔值，表示是否具有忽略大小写修饰符"),s("code",[t._v("i")])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("RegExp.prototype.global")]),t._v("：只读，返回布尔值，表示是否具有全局匹配修饰符"),s("code",[t._v("g")])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("RegExp.prototype.multiline")]),t._v("：只读，返回布尔值，表示是否具有多行匹配修饰符"),s("code",[t._v("m")])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("RegExp.prototype.source")]),t._v("：只读，返回正则表达式的字符串形式，不包括修饰符")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("RegExp.prototype.flags")]),t._v("：只读，返回字符串，表示正则表达式的匹配模式，按照字母顺序排序，可能的值："),s("code",[t._v("gimsuy")])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("RegExp.prototype.lastIndex")]),t._v("：可读写，表示下一次匹配开始的位置，可以通过手动设置属性来设置匹配的起始位置，只对同一个正则表达式生效")])])]),t._v(" "),s("h3",{attrs:{id:"_1-2-实例方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-实例方法"}},[t._v("#")]),t._v(" 1.2 实例方法")]),t._v(" "),s("h4",{attrs:{id:"_1-2-1-regexp-prototype-test"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-1-regexp-prototype-test"}},[t._v("#")]),t._v(" 1.2.1 RegExp.prototype.test()")]),t._v(" "),s("p",[t._v("从正则表达式的"),s("code",[t._v("lastIndex")]),t._v("属性位置开始搜索字符串，如果找到匹配的值，返回"),s("code",[t._v("true")]),t._v("，否则返回"),s("code",[t._v("false")])]),t._v(" "),s("p",[t._v("如果正则表达式含有"),s("code",[t._v("g")]),t._v("修饰符，并且匹配成功，正则表达式的"),s("code",[t._v("lastIndex")]),t._v("属性会随之改变为下一次开始匹配的位置")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" reg "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("xyz")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-flags"}},[t._v("g")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'abcdxyzfgxyz'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lastIndex"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 7")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 12")]),t._v("\n")])])]),s("h4",{attrs:{id:"_1-2-2-regexp-prototype-exec"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-2-regexp-prototype-exec"}},[t._v("#")]),t._v(" 1.2.2 RegExp.prototype.exec()")]),t._v(" "),s("p",[t._v("用正则表达式去匹配字符串，如果匹配成功，则返回一个数组，否则返回"),s("code",[t._v("null")])]),t._v(" "),s("p",[t._v("如果正则表达式含有"),s("code",[t._v("()")]),t._v("，表示组匹配，数组成员为匹配成功的子字符串，第一个成员为匹配整个正则表达式的字符串，第二个位匹配第一对"),s("code",[t._v("()")]),t._v("规则的字符串，以此类推。")]),t._v(" "),s("p",[t._v("返回的数组还包含以下两个属性：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("index")]),t._v("：整个正则表达式匹配字符串的起始位置")]),t._v(" "),s("li",[s("code",[t._v("input")]),t._v("：原始字符串")])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" reg "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("xy(z)")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-flags"}},[t._v("g")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'abcxyzfdgxyz'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" match "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" reg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("exec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("match"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("match"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// (2) ["xyz", "z", index: 4, input: "abcdxyzfgxyz", groups: undefined]')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// (2) ["xyz", "z", index: 9, input: "abcdxyzfgxyz", groups: undefined]')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// null")]),t._v("\n")])])]),s("h2",{attrs:{id:"_2-字符串中使用正则表达式的实例方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-字符串中使用正则表达式的实例方法"}},[t._v("#")]),t._v(" 2. 字符串中使用正则表达式的实例方法")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("String.prototype.match()")]),t._v("：匹配字符串")]),t._v(" "),s("li",[s("code",[t._v("String.prototype.search()")]),t._v("：搜索字符串")]),t._v(" "),s("li",[s("code",[t._v("String.prototype.replace()")]),t._v("：替换字符串")]),t._v(" "),s("li",[s("code",[t._v("String.prototype.split()")]),t._v("：分割字符串")])]),t._v(" "),s("p",[t._v("上面几个方法都可以接受正则表达式作为参数字符串，每次匹配都是从"),s("code",[t._v("0")]),t._v("开始，手动设置正则表达式的"),s("code",[t._v("lastIndex")]),t._v("属性无效")]),t._v(" "),s("h3",{attrs:{id:"_2-1-string-prototype-match"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-string-prototype-match"}},[t._v("#")]),t._v(" 2.1 String.prototype.match()")]),t._v(" "),s("p",[t._v("接受一个正则表达式作为参数，返回一个数组，成员时匹配成功的子字符串，如果没有匹配成功"),s("code",[t._v("null")])]),t._v(" "),s("ul",[s("li",[t._v("当正则表达式没有带有"),s("code",[t._v("g")]),t._v("修饰符的时候，执行的结果和"),s("code",[t._v("RegExp.prototype.exec()")]),t._v("结果一致")]),t._v(" "),s("li",[t._v("当正则表达式带有"),s("code",[t._v("g")]),t._v("修饰符的时候，返回所有匹配成功的子字符串")])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" reg "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("xyz")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" reg2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("xyz")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-flags"}},[t._v("g")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'abcxyzabcxyz'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nstr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["xyz", index: 3, input: "abcxyzabcxyz", groups: undefined]')]),t._v("\nstr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reg2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["xyz", "xyz"]')]),t._v("\n")])])]),s("h3",{attrs:{id:"_2-2-string-prototype-search"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-string-prototype-search"}},[t._v("#")]),t._v(" 2.2 String.prototype.search()")]),t._v(" "),s("p",[t._v("接受一个正则表达式作为参数，返回第一个匹配字符串在原字符串中的位置，如果没有匹配成功，返回"),s("code",[t._v("-1")])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" reg "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("x")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'abxcxd'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nstr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("search")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2")]),t._v("\n")])])]),s("h3",{attrs:{id:"_2-3-string-prototype-replace"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-string-prototype-replace"}},[t._v("#")]),t._v(" 2.3 String.prototype.replace()")]),t._v(" "),s("p",[t._v("接受两个参数，第一个为正则表达式，第二个位替换的字符串，如果正则表达式带有"),s("code",[t._v("g")]),t._v("修饰符，则替换所有满足条件的子字符串，如果没有，则替换第一个满足条件的子字符串")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" reg "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("x")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-flags"}},[t._v("g")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'abxcxd'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nstr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'0'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "ab0c0d"')]),t._v("\n")])])]),s("h3",{attrs:{id:"_2-4-string-prototype-split"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-string-prototype-split"}},[t._v("#")]),t._v(" 2.4 String.prototype.split()")]),t._v(" "),s("p",[t._v("按照正则规则将原字符串分割成数组")]),t._v(" "),s("p",[t._v("接受两个参数，第一个位正则表达式，第二个位返回数组的最大长度，可以省略，返回一个数组。")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" reg "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("x")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'abxcxd'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nstr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// (3) ["ab", "c", "d"]')]),t._v("\n")])])]),s("h2",{attrs:{id:"_3-正则表达式规则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-正则表达式规则"}},[t._v("#")]),t._v(" 3.正则表达式规则")]),t._v(" "),s("h3",{attrs:{id:"_3-1-字面量字符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-字面量字符"}},[t._v("#")]),t._v(" 3.1 字面量字符")]),t._v(" "),s("p",[t._v("在正则表达式中，某个字符只表示它字面的含义，比如"),s("code",[t._v("/z/")]),t._v(","),s("code",[t._v("/a/")]),t._v("分别匹配 a 和 b，就叫他字面量字符")]),t._v(" "),s("h3",{attrs:{id:"_3-2-元字符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-元字符"}},[t._v("#")]),t._v(" 3.2 元字符")]),t._v(" "),s("p",[t._v("具有特殊含义的字符，主要有")]),t._v(" "),s("ul",[s("li",[s("code",[t._v(".")]),t._v("：点字符，匹配除开回车 ("),s("code",[t._v("\\r")]),t._v(")、换行 ("),s("code",[t._v("\\n")]),t._v(")、行分割符 ("),s("code",[t._v("\\u2028")]),t._v(") 和段分割符 ("),s("code",[t._v("\\u2029")]),t._v(") 之外任意一个字符")]),t._v(" "),s("li",[s("code",[t._v("^")]),t._v("：开始位置字符，表示匹配字符串开始")]),t._v(" "),s("li",[s("code",[t._v("$")]),t._v("：结束为止字符，表示匹配字符串结束")]),t._v(" "),s("li",[s("code",[t._v("|")]),t._v("：选择字符，表示或的关系")])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("^a.(b|c)d$")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'abd'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("d$"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'accd'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("d$"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'accdb'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n")])])]),s("h3",{attrs:{id:"_3-3-转义符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-转义符"}},[t._v("#")]),t._v(" 3.3 转义符"),s("code",[t._v("\\")])]),t._v(" "),s("p",[t._v("正则表达式中有一些特殊含义的元字符，如果要表达他们本身，则需要在字符前加上"),s("code",[t._v("\\")]),t._v("进行转义")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("\\+")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a+b'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])])]),s("h3",{attrs:{id:"_3-4-特殊字符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-特殊字符"}},[t._v("#")]),t._v(" 3.4 特殊字符")]),t._v(" "),s("p",[t._v("正则表达式为一些不能打印的字符，提供了一些表达方法")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("[\\b]")]),t._v("匹配退格键，不要与"),s("code",[t._v("\\b")]),t._v("混淆")]),t._v(" "),s("li",[s("code",[t._v("\\n")]),t._v("匹配换行键")]),t._v(" "),s("li",[s("code",[t._v("\\r")]),t._v("匹配回车键")]),t._v(" "),s("li",[s("code",[t._v("\\t")]),t._v("匹配制表符")]),t._v(" "),s("li",[s("code",[t._v("\\v")]),t._v("匹配垂直制表符")]),t._v(" "),s("li",[s("code",[t._v("\\f")]),t._v("匹配换页符")]),t._v(" "),s("li",[s("code",[t._v("\\0")]),t._v("匹配"),s("code",[t._v("null")]),t._v("字符")]),t._v(" "),s("li",[s("code",[t._v("\\xhh")]),t._v("匹配"),s("code",[t._v("\\u00")]),t._v("和"),s("code",[t._v("\\uFF")])]),t._v(" "),s("li",[s("code",[t._v("\\uhhhh")]),t._v("匹配"),s("code",[t._v("\\u0000")]),t._v("和"),s("code",[t._v("\\uFFFF")])])]),t._v(" "),s("h3",{attrs:{id:"_3-5-字符类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-字符类"}},[t._v("#")]),t._v(" 3.5 字符类"),s("code",[t._v("[]")])]),t._v(" "),s("p",[t._v("字符类表示一些可供选择的字符，只要匹配一个就可以，把所有待匹配的字符放入方括号类，组成一个字符类")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" reg "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("[abc]")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nreg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])])]),s("p",[t._v("在字符类中下面两种字符有个特殊含义")]),t._v(" "),s("p",[s("strong",[t._v("脱字符"),s("code",[t._v("^")])])]),t._v(" "),s("ul",[s("li",[t._v("表示除开方括号字符的任意字符都可以匹配，"),s("code",[t._v("[^abc]")]),t._v("表示匹配除开 a, b, c 之外的任意字符")]),t._v(" "),s("li",[s("code",[t._v("[^]")]),t._v("表示匹配一切字符，范围比点字符"),s("code",[t._v(".")]),t._v("要大")]),t._v(" "),s("li",[t._v("脱字符只有在字符类的第一位才有效，否则就是字面量字符")])]),t._v(" "),s("p",[s("strong",[t._v("连字符"),s("code",[t._v("-")])])]),t._v(" "),s("ul",[s("li",[s("code",[t._v("/[0-9]/")]),t._v("表示"),s("code",[t._v("[0123456789]")])]),t._v(" "),s("li",[s("code",[t._v("/[a-z]/")]),t._v("表示 26 个小写字母")]),t._v(" "),s("li",[s("code",[t._v("/[A-Z]/")]),t._v("表示 26 个大写字母")])]),t._v(" "),s("h3",{attrs:{id:"_3-6-预定义模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-6-预定义模式"}},[t._v("#")]),t._v(" 3.6 预定义模式")]),t._v(" "),s("p",[t._v("常见匹配模式的简写")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("\\d")]),t._v("等同于"),s("code",[t._v("[0-9]")])]),t._v(" "),s("li",[s("code",[t._v("\\D")]),t._v("等同于"),s("code",[t._v("[^0-9]")])]),t._v(" "),s("li",[s("code",[t._v("\\w")]),t._v("等同于"),s("code",[t._v("[a-zA-Z0-9_]")])]),t._v(" "),s("li",[s("code",[t._v("\\W")]),t._v("等同于"),s("code",[t._v("[^a-zA-Z0-9_]")])]),t._v(" "),s("li",[s("code",[t._v("\\s")]),t._v("等同于"),s("code",[t._v("[\\r\\n\\t\\v\\f]")])]),t._v(" "),s("li",[s("code",[t._v("\\S")]),t._v("等同于"),s("code",[t._v("[^\\r\\n\\t\\v\\f]")])]),t._v(" "),s("li",[s("code",[t._v("\\b")]),t._v("匹配词的边界")]),t._v(" "),s("li",[s("code",[t._v("\\B")]),t._v("匹配非词边界，即在词的内部")])]),t._v(" "),s("h3",{attrs:{id:"_3-7-重复类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-7-重复类"}},[t._v("#")]),t._v(" 3.7 重复类")]),t._v(" "),s("p",[s("code",[t._v("/a{2,9}/")]),t._v("匹配 a 字符重复 2 次到 9 次")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" reg "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("^1\\d{10}$")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 匹配 1 开头的总共十一位的数字")]),t._v("\n")])])]),s("h3",{attrs:{id:"_3-8-量字符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-8-量字符"}},[t._v("#")]),t._v(" 3.8 量字符")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("?")]),t._v("匹配 0 次或 1 次，等同于"),s("code",[t._v("{0, 1}")])]),t._v(" "),s("li",[s("code",[t._v("*")]),t._v("匹配 任意次，等同于"),s("code",[t._v("{0,}")])]),t._v(" "),s("li",[s("code",[t._v("+")]),t._v("匹配 1 次或多次，等同于"),s("code",[t._v("{1,}")])])]),t._v(" "),s("h3",{attrs:{id:"_3-9-贪婪模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-9-贪婪模式"}},[t._v("#")]),t._v(" 3.9 贪婪模式")]),t._v(" "),s("p",[t._v("量字符的原则是最大可能匹配，知道下一个字符不匹配为止，我们称这种匹配模式为贪婪模式")]),t._v(" "),s("p",[t._v("如果想讲贪婪模式改为非贪婪模式，则在量字符后面加上"),s("code",[t._v("?")])]),t._v(" "),s("ul",[s("li",[s("code",[t._v("*?")]),t._v("表示某个模式出现 0 次或多次，采用非贪婪模式")]),t._v(" "),s("li",[s("code",[t._v("+?")]),t._v("表示某个模式出现 1 次或者多次匹配，采用非贪婪模式")])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("\\d+")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("exec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'453'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["453", index: 0, input: "453", groups: undefined]')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("\\d"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("exec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'453'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["4", index: 0, input: "453", groups: undefined]')]),t._v("\n")])])]),s("h3",{attrs:{id:"_3-10-修饰符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-10-修饰符"}},[t._v("#")]),t._v(" 3.10 修饰符")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("g")]),t._v("：全局匹配，主要用于搜索和替换")]),t._v(" "),s("li",[s("code",[t._v("i")]),t._v("：忽略大小写进行匹配")]),t._v(" "),s("li",[s("code",[t._v("m")]),t._v("：多行匹配模式")])]),t._v(" "),s("h3",{attrs:{id:"_3-11-分组匹配"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-11-分组匹配"}},[t._v("#")]),t._v(" 3.11 分组匹配")]),t._v(" "),s("p",[t._v("正则表达式的括号表示分组匹配")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" reg "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("(\\d)a(\\D)")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'4ab6a4'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" result "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nresult"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["4ab", "4", "b", index: 0, input: "4ab6a4", groups: undefined]')]),t._v("\n")])])]),s("p",[t._v("正则表达式内部可以使用"),s("code",[t._v("\\1")]),t._v(","),s("code",[t._v("\\2")]),t._v("，来表示括号匹配的内容，"),s("code",[t._v("\\1")]),t._v("表示获取第一个括号匹配的内容")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("(.)a(\\d)\\1\\2")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ba4b4'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])])]),s("p",[t._v("实例：html 标签闭合匹配")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" tagReg "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("<([^>]+)>[^>]*<\\/\\1>")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'<span>abc</span>'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ntagReg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("exec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// (2) ["<span>abc</span>", "span", index: 0, input: "<span>abc</span>", groups: undefined]')]),t._v("\n")])])]),s("h4",{attrs:{id:"_3-11-1-非组捕获"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-11-1-非组捕获"}},[t._v("#")]),t._v(" 3.11.1 非组捕获")]),t._v(" "),s("p",[s("code",[t._v("(?:x)")]),t._v("称为非组捕获，表示不返回匹配"),s("code",[t._v("x")]),t._v("的内容")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" m "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'abc'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("(?:.)b(.)")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nm "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["abc", "c"];')]),t._v("\n")])])]),s("h4",{attrs:{id:"_3-11-2-先行断言"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-11-2-先行断言"}},[t._v("#")]),t._v(" 3.11.2 先行断言")]),t._v(" "),s("p",[s("code",[t._v("x(?=y)")]),t._v("称为先行断言，"),s("code",[t._v("x")]),t._v("只有在"),s("code",[t._v("y")]),t._v("前面才匹配，"),s("code",[t._v("y")]),t._v("不计入匹配结果")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" m "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'xaxy'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("x(?=y)")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["x", index: 2, input: "xaxy", groups: undefined]')]),t._v("\n")])])]),s("h4",{attrs:{id:"_3-11-3-先行否定断言"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-11-3-先行否定断言"}},[t._v("#")]),t._v(" 3.11.3 先行否定断言")]),t._v(" "),s("p",[s("code",[t._v("x(?!y)")]),t._v("称为先行否定断言，只有不在"),s("code",[t._v("y")]),t._v("前面的"),s("code",[t._v("x")]),t._v("才匹配，"),s("code",[t._v("y")]),t._v("不计入匹配结果")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" m "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'abcacb'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("c(?!a)")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["c", index: 4, input: "abcacb", groups: undefined]')]),t._v("\n")])])]),s("h2",{attrs:{id:"_4-常用的正则表达式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-常用的正则表达式"}},[t._v("#")]),t._v(" 4. 常用的正则表达式")]),t._v(" "),s("p",[t._v("下面是一些常用的正则表达式，仅供参考，方便日常开发使用")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("/^([1][3,4,5,6,7,8,9])\\d{9}$/")]),t._v("：手机号码")]),t._v(" "),s("li",[s("code",[t._v("/^\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*$/")]),t._v("：邮件地址")]),t._v(" "),s("li",[s("code",[t._v("/^[a-zA-Z]\\w{5,17}$/")]),t._v("：密码（以字母开头，长度在 6~18 之间，只能包含字母、数字和下划线）")]),t._v(" "),s("li",[s("code",[t._v("/^((\\d{18})|([0-9x]{18})|([0-9X]{18}))$/")]),t._v("：18 位身份证号码（数字，字母"),s("code",[t._v("X")]),t._v("结尾）")]),t._v(" "),s("li",[s("code",[t._v("/^[a-zA-z]+://[^\\s]*$/")]),t._v("：网址（URL）")])])])}),[],!1,null,null,null);s.default=r.exports}}]);